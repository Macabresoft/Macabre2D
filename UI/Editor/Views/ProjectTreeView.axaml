<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Macabresoft.Macabre2D.UI.Editor"
             xmlns:avaloniaEx="clr-namespace:Macabresoft.AvaloniaEx;assembly=Macabresoft.AvaloniaEx"
             xmlns:common="clr-namespace:Macabresoft.Macabre2D.UI.Common;assembly=Macabre2D.UI.Common"
             xmlns:framework="clr-namespace:Macabresoft.Macabre2D.Framework;assembly=Macabre2D.Framework"
             x:Class="Macabresoft.Macabre2D.UI.Editor.ProjectTreeView">
    <UserControl.KeyBindings>
        <KeyBinding Command="{Binding $self.RenameCommand}"
                    CommandParameter="{Binding #_treeView}"
                    Gesture="Ctrl + R" />
        <KeyBinding Command="{Binding $self.ViewModel.RemoveContentCommand}"
                    CommandParameter="{Binding $self.ViewModel.ContentService.Selected}"
                    Gesture="Ctrl + Delete" />
    </UserControl.KeyBindings>
    <UserControl.Resources>
        <common:AssetToIconConverter x:Key="AssetToIconConverter" />
        <ContextMenu x:Key="ContentNodeContextMenu">
            <Design.DataContext>
                <common:ContentFile />
            </Design.DataContext>

            <MenuItem Header="Rename"
                      Command="{Binding $parent[avaloniaEx:EditableSelectableItem].EditCommand}"
                      InputGesture="Ctrl + R"
                      ToolTip.Tip="Rename the content" />

            <MenuItem Header="Open"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.OpenCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Open the content" />

            <MenuItem Header="Open Containing Directory"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.OpenContentLocationCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Open the directory which contains the selected file" />

            <Separator />

            <MenuItem Header="Delete"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.RemoveContentCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Delete the content" />
        </ContextMenu>

        <ContextMenu x:Key="ContentDirectoryContextMenu">
            <MenuItem Header="Rename"
                      Command="{Binding $parent[avaloniaEx:EditableSelectableItem].EditCommand}"
                      IsVisible="{Binding Converter={x:Static avaloniaEx:IsTypeConverter.IsType}, ConverterParameter={x:Type framework:INameable}}"
                      ToolTip.Tip="Rename the directory" />

            <MenuItem Header="Open Directory"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.OpenContentLocationCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Open the directory in the file explorer" />

            <Separator />

            <MenuItem Header="Add Directory"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.AddDirectoryCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Adds a directory as the child of the current node" />

            <MenuItem Header="Add Scene"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.AddSceneCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Adds a scene as the child of the current node" />

            <MenuItem Header="Import Content"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.ImportCommand}"
                      CommandParameter="{Binding}"
                      ToolTip.Tip="Import a piece of content from elsewhere" />

            <Separator
                IsVisible="{Binding Converter={x:Static avaloniaEx:IsTypeConverter.IsNotType}, ConverterParameter={x:Type common:RootContentDirectory}}" />

            <MenuItem Header="Delete"
                      Command="{Binding $parent[local:ProjectTreeView].ViewModel.RemoveContentCommand}"
                      CommandParameter="{Binding}"
                      IsVisible="{Binding Converter={x:Static avaloniaEx:IsTypeConverter.IsNotType}, ConverterParameter={x:Type common:RootContentDirectory}}"
                      ToolTip.Tip="Delete the directory" />
        </ContextMenu>
    </UserControl.Resources>
    <Grid DataContext="{Binding $parent[local:ProjectTreeView].ViewModel}">
        <Grid.Styles>
            <Style Selector="avaloniaEx|EditableSelectableItem">
                <Design.DataContext>
                    <common:ContentFile />
                </Design.DataContext>

                <Setter Property="IconForeground" Value="{StaticResource WhiteBrush}" />
                <Setter Property="Icon" Value="{Binding Converter={StaticResource AssetToIconConverter}}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="IsEditable" Value="True" />
                <Setter Property="IsFileName" Value="True" />
                <Setter Property="TextCommittedCommand"
                        Value="{Binding $parent[local:ProjectTreeView].ViewModel.RenameContentCommand}" />
                <Setter Property="Text" Value="{Binding Name}" />
            </Style>
        </Grid.Styles>
        <Design.DataContext>
            <local:ProjectTreeViewModel />
        </Design.DataContext>
        <Border Classes="Card"
                Margin="{StaticResource StandardMarginLeftTopBottom}">
            <Grid RowDefinitions="Auto, Auto, *"
                  ColumnDefinitions="Auto, *, Auto">
                <StackPanel Grid.Row="0"
                            Orientation="Horizontal">
                    <Button Command="{Binding AddCommand, Mode=OneWay}"
                            CommandParameter="{Binding AssetSelectionService.Selected}"
                            Classes="Icon"
                            ToolTip.Tip="Add content as a child of the selected node">
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Add (Context Sensitive)"
                                          Command="{Binding AddDirectoryCommand}"
                                          CommandParameter="{Binding AssetSelectionService.Selected}"
                                          ToolTip.Tip="Adds either a directory node or an asset collection child" />

                                <MenuItem Header="Add Directory"
                                          Command="{Binding AddDirectoryCommand}"
                                          CommandParameter="{Binding AssetSelectionService.Selected}"
                                          ToolTip.Tip="Adds a directory as the child of the current node" />

                                <MenuItem Header="Add Scene"
                                          Command="{Binding AddSceneCommand}"
                                          CommandParameter="{Binding AssetSelectionService.Selected}"
                                          ToolTip.Tip="Adds a scene as the child of the current node" />

                                <MenuItem Header="Import Content"
                                          Command="{Binding ImportCommand}"
                                          CommandParameter="{Binding AssetSelectionService.Selected}"
                                          ToolTip.Tip="Import a piece of content from elsewhere" />
                            </ContextMenu>
                        </Button.ContextMenu>
                        <avaloniaEx:Icon Content="{StaticResource AddIcon}" />
                    </Button>
                    <Button Command="{Binding RemoveContentCommand, Mode=OneWay}"
                            CommandParameter="{Binding AssetSelectionService.Selected}"
                            Classes="Icon"
                            ToolTip.Tip="Remove the selected content node and all of its children from your computer">
                        <avaloniaEx:Icon Content="{StaticResource RemoveIcon}" />
                    </Button>

                    <Button Command="{Binding CloneCommand}"
                            CommandParameter="{Binding AssetSelectionService.Selected}"
                            HotKey="Ctrl + Shift + C"
                            Classes="Icon"
                            IsVisible="{Binding IsSpriteSheetMemberSelected}"
                            ToolTip.Tip="Clone the selected asset member">
                        <avaloniaEx:Icon Content="{StaticResource CloneIcon}" />
                    </Button>

                    <Button Command="{Binding MoveUpCommand}"
                            CommandParameter="{Binding AssetSelectionService.Selected}"
                            ToolTip.Tip="Move the selected child up one spot in the list"
                            Classes="Icon"
                            IsVisible="{Binding IsSpriteSheetMemberSelected}">
                        <avaloniaEx:Icon Content="{StaticResource ChevronUpIcon}" />
                    </Button>

                    <Button Command="{Binding MoveDownCommand}"
                            CommandParameter="{Binding AssetSelectionService.Selected}"
                            ToolTip.Tip="Move the selected child down one spot in the list"
                            Classes="Icon"
                            IsVisible="{Binding IsSpriteSheetMemberSelected}">
                        <avaloniaEx:Icon Content="{StaticResource ChevronDownIcon}" />
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="2"
                            Grid.Row="0"
                            IsVisible="{Binding !IsFiltered}"
                            Orientation="Horizontal">
                    <Button Classes="Icon"
                            Command="{x:Static common:TreeViewHelper.ExpandAllCommand}"
                            CommandParameter="{Binding #_treeView}"
                            ToolTip.Tip="Expand all nodes in the project tree">
                        <avaloniaEx:Icon Content="{StaticResource ExpandIcon}" />
                    </Button>
                    <Button Classes="Icon"
                            Command="{x:Static common:TreeViewHelper.CollapseAllCommand}"
                            CommandParameter="{Binding #_treeView}"
                            ToolTip.Tip="Collapse all nodes in the project tree">
                        <avaloniaEx:Icon Content="{StaticResource CollapseIcon}" />
                    </Button>
                </StackPanel>

                <Grid Grid.Column="0"
                      Grid.ColumnSpan="3"
                      Grid.Row="1"
                      ColumnDefinitions="*, Auto">
                    <TextBox Grid.Column="0"
                             Height="14"
                             Text="{Binding FilterText}"
                             Watermark="Filter..." />

                    <Button Grid.Column="1"
                            VerticalAlignment="Top"
                            Classes="Icon"
                            Command="{Binding ClearFilterCommand}"
                            ToolTip.Tip="Clear the filter">
                        <avaloniaEx:Icon Content="{StaticResource EraserIcon}" />
                    </Button>
                </Grid>

                <TreeView Grid.Column="0"
                          Grid.ColumnSpan="3"
                          Grid.Row="2"
                          IsVisible="{Binding !IsFiltered}"
                          Name="_treeView"
                          ItemsSource="{Binding ContentService.RootContentDirectory, Mode=OneWay, Converter={x:Static avaloniaEx:ObjectToEnumerableConverter.Instance}}"
                          SelectedItem="{Binding AssetSelectionService.Selected, Mode=TwoWay}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <TreeView.Styles>
                        <Style Selector="avaloniaEx|EditableSelectableItem.File">
                            <Design.DataContext>
                                <common:ContentFile />
                            </Design.DataContext>

                            <Setter Property="ContextMenu" Value="{StaticResource ContentNodeContextMenu}" />
                        </Style>

                        <Style Selector="avaloniaEx|EditableSelectableItem.Directory">
                            <Setter Property="IconForeground" Value="{StaticResource YellowBrush}" />
                            <Setter Property="ContextMenu" Value="{StaticResource ContentDirectoryContextMenu}" />
                        </Style>

                        <Style Selector="TreeViewItem">
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.Styles>
                    <TreeView.DataTemplates>
                        <TreeDataTemplate DataType="common:RootContentDirectory"
                                          ItemsSource="{Binding Children}">
                            <Border Classes="DragDrop">
                                <avaloniaEx:EditableSelectableItem Classes="Directory"
                                                                   Icon="{StaticResource ProjectIcon}"
                                                                   IsEditable="False"
                                                                   IsFileName="False"
                                                                   Text="Project" />
                            </Border>
                        </TreeDataTemplate>

                        <TreeDataTemplate DataType="common:SpriteSheetContentFile"
                                          ItemsSource="{Binding Children}">
                            <Border Classes="DragDrop"
                                    PointerPressed="Node_OnPointerPressed"
                                    PointerReleased="Node_OnPointerReleased"
                                    PointerMoved="Node_OnPointerMoved">
                                <avaloniaEx:EditableSelectableItem Classes="File" />
                            </Border>
                        </TreeDataTemplate>

                        <TreeDataTemplate DataType="common:IContentDirectory"
                                          ItemsSource="{Binding Children}">
                            <Border Classes="DragDrop"
                                    PointerPressed="Node_OnPointerPressed"
                                    PointerReleased="Node_OnPointerReleased"
                                    PointerMoved="Node_OnPointerMoved">
                                <avaloniaEx:EditableSelectableItem Classes="Directory"
                                                                   Icon="{StaticResource DirectoryIcon}" />
                            </Border>
                        </TreeDataTemplate>

                        <TreeDataTemplate DataType="common:IContentNode">
                            <Border Classes="DragDrop"
                                    PointerPressed="Node_OnPointerPressed"
                                    PointerReleased="Node_OnPointerReleased"
                                    PointerMoved="Node_OnPointerMoved">
                                <avaloniaEx:EditableSelectableItem Classes="File" />
                            </Border>
                        </TreeDataTemplate>

                        <TreeDataTemplate DataType="framework:INameableCollection"
                                          ItemsSource="{Binding}">
                            <Border>
                                <avaloniaEx:EditableSelectableItem IconForeground="{StaticResource YellowBrush}"
                                                                   IsFileName="False"
                                                                   IsEditable="False" />
                            </Border>
                        </TreeDataTemplate>

                        <TreeDataTemplate DataType="framework:INameable">
                            <Border>
                                <avaloniaEx:EditableSelectableItem IconForeground="{StaticResource PurpleBrush}"
                                                                   IsFileName="False" />
                            </Border>
                        </TreeDataTemplate>
                    </TreeView.DataTemplates>
                </TreeView>

                <ListBox Grid.Column="0"
                         Grid.ColumnSpan="3"
                         Grid.Row="2"
                         IsVisible="{Binding IsFiltered}"
                         Margin="{StaticResource StandardMarginAll}"
                         ItemsSource="{Binding FilteredNodes, Mode=OneWay}"
                         SelectedItem="{Binding FilteredSelection}"
                         SelectionMode="Single">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                    MinHeight="{StaticResource TextControlThemeMinHeight}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    DoubleTapped="FilteredNode_OnDoubleTapped">
                                <avaloniaEx:EditableSelectableItem Classes="File"
                                                                   IsEditable="False" />
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</UserControl>