<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:Macabresoft.Macabre2D.UI.ProjectEditor.Controls"
        xmlns:converters="clr-namespace:Macabresoft.Macabre2D.UI.Common.Converters;assembly=Macabre2D.UI.Common"
        xmlns:models="clr-namespace:Macabresoft.Macabre2D.UI.Common.Models;assembly=Macabre2D.UI.Common"
        xmlns:monoGame="clr-namespace:Macabresoft.Macabre2D.UI.Common.MonoGame;assembly=Macabre2D.UI.Common"
        xmlns:views="clr-namespace:Macabresoft.Macabre2D.UI.ProjectEditor.Views"
        xmlns:viewModels="clr-namespace:Macabresoft.Macabre2D.UI.Common.ViewModels;assembly=Macabre2D.UI.Common"
        x:Class="Macabresoft.Macabre2D.UI.ProjectEditor.Views.MainWindow"
        Name="Macabre2D"
        Title="Macabre2D"
        ExtendClientAreaToDecorationsHint="{Binding ShowNonNativeMenu}"
        WindowState="Maximized"
        Padding="{Binding $self.WindowState, Converter={StaticResource WindowStateToPaddingConverter}}">
    <Design.DataContext>
        <viewModels:MainWindowViewModel />
    </Design.DataContext>
    <Window.Resources>
        <converters:EqualityConverter x:Key="EqualityConverter" />
        <converters:GizmoKindToBoolConverter x:Key="GizmoKindToBoolConverter" />
    </Window.Resources>
    <NativeMenu.Menu>
        <NativeMenu>
            <NativeMenuItem Header="File">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="Save"
                                        Command="{Binding SaveCommand}" />
                        <NativeMenuItem Header="Open Scene"
                                        Command="{Binding OpenSceneCommand}" />
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>
            <NativeMenuItem Header="Edit">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="Undo"
                                        Command="{Binding UndoCommand}"
                                        Gesture="Ctrl + Z" />
                        <NativeMenuItem Header="Redo"
                                        Command="{Binding RedoCommand}"
                                        Gesture="Ctrl + Y" />
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>
            <NativeMenuItem Header="Help">
                <NativeMenuItem.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="View Source"
                                        Command="{Binding ViewSourceCommand}" />
                    </NativeMenu>
                </NativeMenuItem.Menu>
            </NativeMenuItem>
        </NativeMenu>
    </NativeMenu.Menu>
    <Grid RowDefinitions="Auto, *">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.25*"
                              MinWidth="300" />
            <ColumnDefinition Width="0" />
            <ColumnDefinition Width="0.75*" />
        </Grid.ColumnDefinitions>

        <views:SceneEditorView Grid.Row="1"
                               Grid.Column="0"
                               Grid.ColumnSpan="3" />

        <Grid Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="3"
              ColumnDefinitions="Auto, Auto, *"
              IsVisible="{Binding ShowNonNativeMenu}">
            <Border Grid.ColumnSpan="3"
                    HorizontalAlignment="Stretch"
                    PointerPressed="TitleBar_OnPointerPressed"
                    Background="{DynamicResource SystemControlDisabledChromeDisabledHighBrush}"
                    Padding="{StaticResource DoubleMarginAll}"
                    BoxShadow="{StaticResource DefaultBoxShadow}"
                    ZIndex="-1" />

            <Image Grid.Column="0"
                   Width="24"
                   Height="24"
                   Margin="{StaticResource DoubleMarginHorizontal}"
                   Source="/Assets/icon.ico" />

            <Menu Grid.Column="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save"
                              Command="{Binding SaveCommand}"
                              InputGesture="Ctrl + S"
                              HotKey="Ctrl + S" />

                    <MenuItem Header="_Open Scene"
                              Command="{Binding OpenSceneCommand}"
                              InputGesture="Ctrl + O"
                              HotKey="Ctrl + O" />

                    <Separator />

                    <MenuItem Header="_Exit"
                              InputGesture="Alt + F4"
                              Command="{Binding ExitCommand}"
                              CommandParameter="{Binding $parent[Window]}" />
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="_Undo"
                              Command="{Binding UndoCommand}"
                              InputGesture="Ctrl + Z"
                              HotKey="Ctrl + Z" />
                    <MenuItem Header="_Redo"
                              Command="{Binding RedoCommand}"
                              InputGesture="Ctrl + Y"
                              HotKey="Ctrl + Y" />
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_View Source"
                              Command="{Binding ViewSourceCommand}" />
                </MenuItem>
            </Menu>

            <TextBlock Grid.Column="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       IsHitTestVisible="False"
                       Text="Macabre2D" />
        </Grid>

        <Grid Grid.Row="1"
              Grid.Column="0"
              RowDefinitions="0.4*, 0, 0.6*"
              Margin="{StaticResource DoubleMarginLeftTopBottom}">
            <Border Grid.Row="0"
                    Classes="Card"
                    Margin="{StaticResource DoubleMarginLeftTopBottom}">
                <TabControl SelectionChanged="TabControl_OnSelectionChanged"
                            Initialized="TabControl_OnInitialized">
                    <TabItem Header="Entities"
                             Tag="{x:Static models:EditorTabs.Entities}">
                        <views:SceneTreeView />
                    </TabItem>
                    <TabItem Header="Systems"
                             Tag="{x:Static models:EditorTabs.Systems}">
                        <views:SystemsView />
                    </TabItem>
                    <TabItem Header="Content"
                             Tag="{x:Static models:EditorTabs.Content}">
                        <views:ContentTreeView />
                    </TabItem>
                </TabControl>
            </Border>

            <GridSplitter Grid.Row="1"
                          Classes="CardSplitter" />

            <Border Grid.Row="2"
                    Classes="Card"
                    Margin="{StaticResource DoubleMarginLeftTopBottom}">
                <Grid>
                    <controls:ValueEditorListControl Margin="{StaticResource StandardMarginAll}"
                                                     Collections="{Binding EntityService.Editors}"
                                                     IsBusy="{Binding EntityService.IsBusy}"
                                                     IsVisible="{Binding SelectedTab, Mode=OneWay, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static models:EditorTabs.Entities}}" />
                    <controls:ValueEditorListControl Margin="{StaticResource StandardMarginAll}"
                                                     Collections="{Binding SystemService.Editors}"
                                                     IsBusy="{Binding SystemService.IsBusy}"
                                                     IsVisible="{Binding SelectedTab, Mode=OneWay, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static models:EditorTabs.Systems}}" />
                    <controls:ValueEditorListControl Margin="{StaticResource StandardMarginAll}"
                                                     Collections="{Binding ContentService.Editors}"
                                                     IsBusy="{Binding ContentService.IsBusy}"
                                                     IsVisible="{Binding SelectedTab, Mode=OneWay, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static models:EditorTabs.Content}}" />
                </Grid>
            </Border>
        </Grid>

        <GridSplitter Grid.Row="1"
                      Grid.Column="1"
                      Classes="CardSplitter" />
        
        <StackPanel Grid.Row="1"
                    Grid.Column="2"
                    Margin="{StaticResource DoubleMarginAll}"
                    Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
            <Border Classes="Card">
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding EditorService.RequestCenterCameraCommand}"
                            Classes="Icon"
                            ToolTip.Tip="Centers the editor camera on (0, 0) in the scene.">
                        <controls:Icon Content="{StaticResource CameraIcon}" />
                    </Button>
                    <Button Command="{Binding EditorService.RequestFocusCommand}"
                            Classes="Icon"
                            ToolTip.Tip="Focuses the editor camera on the currently selected entity.">
                        <controls:Icon Content="{StaticResource FocusIcon}" />
                    </Button>
                </StackPanel>
            </Border>

            <Border Classes="Card">
                <StackPanel Orientation="Horizontal">
                    <ToggleButton Command="{Binding SetSelectedGizmoCommand}"
                                  CommandParameter="{x:Static monoGame:GizmoKind.Selector}"
                                  Classes="Icon"
                                  ToolTip.Tip="Shows the selected entity's position">
                        <ToggleButton.IsChecked>
                            <Binding Path="EditorService.SelectedGizmo"
                                     Converter="{StaticResource GizmoKindToBoolConverter}"
                                     ConverterParameter="{x:Static monoGame:GizmoKind.Selector}"
                                     Mode="OneWay"
                                     TargetNullValue="False" />
                        </ToggleButton.IsChecked>

                        <controls:Icon Content="{StaticResource SelectIcon}" />
                    </ToggleButton>
                    <ToggleButton Command="{Binding SetSelectedGizmoCommand}"
                                  CommandParameter="{x:Static monoGame:GizmoKind.Translation}"
                                  Classes="Icon"
                                  ToolTip.Tip="Alter the position of the currently selected entity">
                        <ToggleButton.IsChecked>
                            <Binding Path="EditorService.SelectedGizmo"
                                     Converter="{StaticResource GizmoKindToBoolConverter}"
                                     ConverterParameter="{x:Static monoGame:GizmoKind.Translation}"
                                     Mode="OneWay"
                                     TargetNullValue="False" />
                        </ToggleButton.IsChecked>

                        <controls:Icon Content="{StaticResource TranslateIcon}" />
                    </ToggleButton>
                    <ToggleButton Command="{Binding SetSelectedGizmoCommand}"
                                  CommandParameter="{x:Static monoGame:GizmoKind.Scale}"
                                  Classes="Icon"
                                  ToolTip.Tip="Alter the scale of the currently selected entity">
                        <ToggleButton.IsChecked>
                            <Binding Path="EditorService.SelectedGizmo"
                                     Converter="{StaticResource GizmoKindToBoolConverter}"
                                     ConverterParameter="{x:Static monoGame:GizmoKind.Scale}"
                                     Mode="OneWay"
                                     TargetNullValue="False" />
                        </ToggleButton.IsChecked>

                        <controls:Icon Content="{StaticResource ScaleIcon}" />
                    </ToggleButton>
                </StackPanel>
            </Border>
        </StackPanel>
    </Grid>
</Window>